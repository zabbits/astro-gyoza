---
import type { GetStaticPaths } from 'astro'
import PageLayout from '@/layouts/PageLayout.astro'
import PostList from '@/components/post/PostList.astro'
import PostPagination from '@/components/post/PostPagination.astro'
import { getSortedPosts } from '@/utils/content'
import appConfig from '@/config.json'

import type { CollectionEntry } from 'astro:content'


export const getStaticPaths = (async () => {
  const sortedPosts = await getSortedPosts()
  const { perPage } = appConfig.posts
  const totalPage = Math.ceil(sortedPosts.length / perPage)

  const paths = Array.from({ length: totalPage }).map((_, i) => {
    const data = sortedPosts.slice(i * perPage, (i + 1) * perPage)
    const props = { currentPage: i + 1, totalPage, data }
    const params = {
      page: i === 0 ? undefined : `page/${i + 1}`,
    }
    return { params, props }
  })

  return paths
}) satisfies GetStaticPaths

interface Props {
  currentPage: number
  totalPage: number
  data: CollectionEntry<'posts'>[]
}

const { currentPage, totalPage, data } = Astro.props



const getPageUrl = (page: number) => {
  if (page === 1) return '/'
  return `/page/${page}`
}
---

<PageLayout>
  <div>
    <div class="max-w-[1000px] px-4 md:px-8 py-20 mx-auto">
      <div class="min-w-0">
          <PostList posts={data} />
          {
            totalPage > 1 && (
              <PostPagination current={currentPage} total={totalPage} getPageUrl={getPageUrl} />
            )
          }
      </div>
    </div>
  </div>
</PageLayout>
